//
// Entitie.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Entitie: Codable, JSONEncodable, Hashable {

    public var description: String?
    public var fullName: String?
    public var image: String?
    public var name: String?
    public var type: String?
    public var latitude: Double?
    public var locationType: String?
    public var longitude: Double?

    public init(description: String? = nil, fullName: String? = nil, image: String? = nil, name: String? = nil, type: String? = nil, latitude: Double? = nil, locationType: String? = nil, longitude: Double? = nil) {
        self.description = description
        self.fullName = fullName
        self.image = image
        self.name = name
        self.type = type
        self.latitude = latitude
        self.locationType = locationType
        self.longitude = longitude
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description
        case fullName = "full_name"
        case image
        case name
        case type
        case latitude
        case locationType = "location_type"
        case longitude
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(fullName, forKey: .fullName)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(latitude, forKey: .latitude)
        try container.encodeIfPresent(locationType, forKey: .locationType)
        try container.encodeIfPresent(longitude, forKey: .longitude)
    }
}

