//
// News.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct News: Codable, JSONEncodable, Hashable {

    public var author: String?
    public var authors: [String]?
    public var id: Int?
    public var image: String?
    public var language: String?
    public var publishDate: String?
    public var sentiment: Double?
    public var sourceCountry: String?
    public var summary: String?
    public var text: String?
    public var url: String?
    public var video: String?
    public var title: String?

    public init(author: String? = nil, authors: [String]? = nil, id: Int? = nil, image: String? = nil, language: String? = nil, publishDate: String? = nil, sentiment: Double? = nil, sourceCountry: String? = nil, summary: String? = nil, text: String? = nil, url: String? = nil, video: String? = nil, title: String? = nil) {
        self.author = author
        self.authors = authors
        self.id = id
        self.image = image
        self.language = language
        self.publishDate = publishDate
        self.sentiment = sentiment
        self.sourceCountry = sourceCountry
        self.summary = summary
        self.text = text
        self.url = url
        self.video = video
        self.title = title
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case author
        case authors
        case id
        case image
        case language
        case publishDate = "publish_date"
        case sentiment
        case sourceCountry = "source_country"
        case summary
        case text
        case url
        case video
        case title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(author, forKey: .author)
        try container.encodeIfPresent(authors, forKey: .authors)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(publishDate, forKey: .publishDate)
        try container.encodeIfPresent(sentiment, forKey: .sentiment)
        try container.encodeIfPresent(sourceCountry, forKey: .sourceCountry)
        try container.encodeIfPresent(summary, forKey: .summary)
        try container.encodeIfPresent(text, forKey: .text)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(video, forKey: .video)
        try container.encodeIfPresent(title, forKey: .title)
    }
}

